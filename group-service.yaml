spring:
    # Database configuration
    datasource:
        url: jdbc:postgresql://database:5432/platform
        hikari:
            username: postgres
            password: password
            driver-class-name: org.postgresql.Driver
    jpa:
        properties:
            hibernate:
                default_schema: group_schema
                show_sql: true
                format_sql: true
                hbm2ddl.auto: update
                dialect: org.hibernate.dialect.PostgreSQLDialect
    # Security configuration
    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: http://keycloak:8080/realms/spmia-realm
            client:
                provider:
                    keycloak:
                        issuer-uri: http://keycloak:8080/realms/spmia-realm
                registration:
                    keycloak:
                        client-id: platform
                        client-secret: NLMpBpyZhwu4pTSCpBuskCeGBZv24p3i
                        scope: openid
    # Zipkin configuration
    zipkin:
        baseUrl: http://zipkin:9411
    sleuth:
        sampler:
            percentage: 1
    # Kafka configuration
    kafka:
        consumer:
            bootstrap-servers: localhost:9092, localhost:9094, localhost:9096
            group-id: user-events-group
            properties:
                spring.json.trusted.packages: '*'

        producer:
            bootstrap-servers: localhost:9092, localhost:9094, localhost:9096
            acks: all
            properties:
                delivery:
                    timeout:
                        ms: 20000
                linger:
                    ms: 0
                request:
                    timeout:
                        ms: 10000
                spring. json.trusted.packages: com.example.group.events

# Redis configuration
redis:
    server: redis
    port: 6379

# Actuator monitoring configuration
management:
    endpoints:
        web:
            exposure:
                include: '*'

# Eureka configuration
eureka:
    instance:
        preferIpAddress: true
    client:
        registerWithEureka: true
        fetchRegistry: true
        serviceUrl:
            defaultZone: http://eurekaserver:8070/eureka/

# Server configuration
server:
    port: 8082

# Resilence4j configuration
resilience4j.circuitbreaker:
    instances:
        groupService:
            registerHealthIndicator: true
            ringBufferSizeInClosedState: 6
            ringBufferSizeInHalfOpenState: 4
            slidingWindowSize: 10
            permittedNumberOfCallsInHalfOpenState: 3
            slidingWindowType: TIME_BASED
            minimumNumberOfCalls: 20
            waitDurationInOpenState: 20s
            failureRateThreshold: 60
            eventConsumerBufferSize: 10
